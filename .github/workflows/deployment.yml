on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-20.04 
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 11 

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19.x

      - name: Install Ionic
        run: npm install -g @ionic/cli

      - name: Install app dependencies
        working-directory: ./frontend
        run: npm ci && npm install @capacitor/cli

      - name: Build Ionic App
        working-directory: ./frontend
        env:
          CI: false
        run: ionic build

      - name: Copy Android
        working-directory: ./frontend
        env:
          CI: false
        run: ionic capacitor copy android

      - name: Build Android  APK
        working-directory: ./frontend
        env:
          CI: false
        run: ionic capacitor build android --release --prod
      
      - name: caching the artifacts
        uses: actions/cache@v2
        env:
          PATH: ./frontend/android/app/build/outputs/apk/release/app-release-unsigned.apk
        with:
          path: ./frontend/android/app/build/outputs/apk/release/app-release-unsigned.apk 
          key: build-artifacts-${{hashFiles('./frontend/android/app/build/outputs/apk/release/app-release-unsigned.apk')}}
  release:
      name: Release APK
      needs: build 
      runs-on: ubuntu-22.04 
      steps:
      - name: restore cache artifacts 
        uses: actions/cache@v2
        with:
          path: ./frontend/android/app/build/outputs/apk/release/app-release-unsigned.apk
          key: build-artifacts-${{hashFiles('./frontend/android/app/build/outputs/apk/release/app-release-unsigned.apk')}}
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: id-$${{hashFiles('./frontend/src')}} 
          release_name: Release-Citrus
      - name: debug 
        run: ls -R > file.txt && cat file.txt 
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./frontend/android/app/build/outputs/apk/release/app-release-unsigned.apk
          asset_name: Citrus.apk
          asset_content_type: application/zip  
